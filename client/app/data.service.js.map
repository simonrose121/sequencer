{"version":3,"sources":["client/app/data.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAYa,WAAW;gBAEpB,qBAAoB,gBAAkC,EAClC,IAAU;oBADV,qBAAgB,GAAhB,gBAAgB,CAAkB;oBAClC,SAAI,GAAJ,IAAI,CAAM;oBAEtB,OAAE,GAAG,CAAC,CAAC,CAAC,uBAAuB;gBAFN,CAAC;gBAIlC,2BAAK,GAAL,UAAM,EAAW;oBACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;gBACjB,CAAC;gBAED,4CAA4C;gBAC5C,sCAAsC;gBACtC,uCAAuC;gBACvC,gDAAgD;gBAChD,0CAA0C;gBAC1C,qCAAqC;gBACrC,sFAAsF;gBACtF,IAAI;gBAEJ,+BAAS,GAAT,UAAU,KAAY,EAAE,IAAa;oBACjC,IAAI,OAAO,GAAG,IAAI,cAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;oBAClE,IAAI,OAAO,GAAG,IAAI,qBAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;oBAEvD,IAAM,GAAG,GAAG,IAAI,SAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;oBAEpG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;gBAChD,CAAC;gBACL,kBAAC;YAAD,CA5BA,AA4BC,IAAA;YA5BY,WAAW;gBADvB,iBAAU,EAAE;iDAG6B,oCAAgB;oBAC5B,WAAI;eAHrB,WAAW,CA4BvB;;QACD,CAAC","file":"data.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport { UtilitiesService } from './utilities.service';\nimport { Story } from './models/Story';\nimport { Log } from './models/Log';\nimport { Card } from './models/Card';\n\n@Injectable()\nexport class DataService {\n\n    constructor(private utilitiesService: UtilitiesService,\n                private http: Http) {}\n\n    private id = 1; // TODO: Change me back\n\n    setId(id : number) {\n        this.id = id;\n    }\n\n    // storeMark(story : Story, mark : number) {\n    //     console.log('---------------');\n    //     console.log('user: ' + this.id);\n    //     console.log('question: ' + story.action);\n    //     console.log('type: ' + story.type);\n    //     console.log('score: ' + mark);\n    //     console.log('time taken: ' + this.utilitiesService.secondsElapsed(new Date()));\n    // }\n\n    createLog(story: Story, mark : number) {\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n\n        const log = new Log(this.id, 1, story.type, mark, this.utilitiesService.secondsElapsed(new Date()));\n\n        this.http.post('/log/create', log, options);\n    }\n}\n"]}