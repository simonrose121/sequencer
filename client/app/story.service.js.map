{"version":3,"sources":["client/app/story.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAaa,YAAY;gBAIrB,sBAAoB,WAAwB,EACxB,gBAAkC,EAClC,IAAU;oBAFV,gBAAW,GAAX,WAAW,CAAa;oBACxB,qBAAgB,GAAhB,gBAAgB,CAAkB;oBAClC,SAAI,GAAJ,IAAI,CAAM;oBAJtB,eAAU,GAAG,kBAAkB,CAAC;gBAIP,CAAC;gBAElC,iBAAiB;gBACV,iCAAU,GAAjB;oBACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAChE,CAAC;gBAEO,kCAAW,GAAnB,UAAoB,GAAa;oBAC7B,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;gBAC9B,CAAC;gBAEO,kCAAW,GAAnB,UAAoB,KAAU;oBAC1B,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;oBAC1C,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;gBAClD,CAAC;gBAED,2BAAI,GAAJ,UAAK,KAAa,EAAE,KAAmB;oBACnC;;;;sBAIE;oBACF,IAAI,IAAI,CAAC;oBACT,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC;wBACzB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC;wBACzB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC;wBACzB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC5B,IAAI,GAAG,CAAC,CAAC;oBACb,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBAChE,IAAI,GAAG,CAAC,CAAC;oBACb,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,IAAI,GAAG,CAAC,CAAC;oBACb,CAAC;oBAED,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBAC5C,CAAC;gBACL,mBAAC;YAAD,CA1CA,AA0CC,IAAA;YA1CY,YAAY;gBADxB,iBAAU,EAAE;iDAKwB,0BAAW;oBACN,oCAAgB;oBAC5B,WAAI;eANrB,YAAY,CA0CxB;;QACD,CAAC","file":"story.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport { DataService } from './data.service';\nimport { UtilitiesService } from './utilities.service';\n\nimport { Card } from './../models/card';\nimport { Story } from './../models/story';\n\n@Injectable()\nexport class StoryService {\n\n    private storiesUrl = 'app/stories.json';\n\n    constructor(private dataService: DataService,\n                private utilitiesService: UtilitiesService,\n                private http: Http) {}\n\n    // public methods\n    public getStories() : Observable<Story[]> {\n        return this.http.get(this.storiesUrl).map(this.extractData);\n    }\n\n    private extractData(res: Response) {\n        return res.json().stories;\n    }\n\n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error);\n        return Promise.reject(error.message || error);\n    }\n\n    mark(story : Story, cards : Array<Card>) {\n        /* logic for this:\n          Correct sequence - 2 points\n          Correct beginning and end - 1 point\n          Incorrect sequence - 0 points\n        */\n        let mark;\n        if ((cards[0].position === 1) &&\n            (cards[1].position === 2) &&\n            (cards[2].position === 3) &&\n            (cards[3].position === 4)) {\n            mark = 2;\n        } else if ((cards[0].position === 1) && (cards[3].position === 4)) {\n            mark = 1;\n        } else {\n            mark = 0;\n        }\n\n        this.dataService.createLog(story, mark);\n    }\n}\n"]}